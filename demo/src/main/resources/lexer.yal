{
    // Estos imports son parte de la lógica de compilación
    // No deben quitarse para el buen funcionamiento
    import com.example.Modules.Analisis.LexAnalisis;
    import com.example.models.AFD;
    import java.io.FileInputStream;
    import java.io.ObjectInputStream;
    import java.io.IOException;
}

let digit = ['0'-'9']
let number = digit+
let blanks = ' '|'\t'
let word = ['A'-'Z''a'-'z']+
let comment = '"'word'"'
let variable = word''number
let punct = '?'|'!'|'.'
let singleString = '''(word|digit|' '|punct)+'''
let menor = '>'
let mayor = '<'
let igual = '='
let menorigual = (menor)(igual)
let mayorigual = (mayor)(igual)

rule gettoken =
blanks { return lexbuf }
| '\n' { return EOL }
| '+' { return PLUS }
| '-' { return MINUS }
| '*' { return TIMES }
| '/' { return DIV }
| '(' { return LPAREN }
| ')' { return RPAREN }
| '=' { return EQUALS }
| digit { return DIGIT }
| number { return NUMBER }
| singleString { return COMMENT }
| variable { return VARIABLE }
| word { return WORD }
| menorigual { return LESSIQUAL }